OK
test.json
0 :: On the importance of having vision:
	In	 0.043478260869565216
	this	 0.043478260869565216
	blog	 0.043478260869565216
	post	 0.043478260869565216
	I	 0.043478260869565216
	talk	 0.043478260869565216
	about	 0.043478260869565216
	a	 0.043478260869565216
	common	 0.043478260869565216
	principle	 0.043478260869565216
	that	 0.043478260869565216
	can	 0.043478260869565216
	guide	 0.043478260869565216
	creation	 0.043478260869565216
	in	 0.043478260869565216
	various	 0.043478260869565216
	domains	 0.043478260869565216
	such	 0.043478260869565216
	as	 0.043478260869565216
	art	 0.043478260869565216
	and	 0.043478260869565216
	software	 0.043478260869565216
	development.	 0.043478260869565216

1 :: Evolution of my watercolor palette:
	and	 0.125
	description	 0.125
	evolution	 0.125
	of	 0.125
	my	 0.125
	watercolor	 0.125
	A	 0.125
	palette.	 0.125

2 :: Notes on watercolor equipment:
	I	 0.14285714285714285
	description	 0.14285714285714285
	of	 0.14285714285714285
	watercolor	 0.14285714285714285
	equipment	 0.14285714285714285
	A	 0.14285714285714285
	use.	 0.14285714285714285

3 :: Simulating Tenderbake:
		 1.0

4 :: Ormolu internship:
		 1.0

5 :: GitHub actions for Haskell CI:
	post	 0.08333333333333333
	I	 0.08333333333333333
	explains	 0.08333333333333333
	how	 0.08333333333333333
	use	 0.08333333333333333
	GitHub	 0.08333333333333333
	actions	 0.08333333333333333
	to	 0.08333333333333333
	setup	 0.08333333333333333
	Haskell	 0.08333333333333333
	The	 0.08333333333333333
	CI.	 0.08333333333333333

6 :: Setting up Buildkite for Nix-based projects using Terraform and GCP:
		 1.0

7 :: The story with data-default:
	post	 0.1111111111111111
	explains	 0.1111111111111111
	why	 0.1111111111111111
	data-default	 0.1111111111111111
	should	 0.1111111111111111
	not	 0.1111111111111111
	be	 0.1111111111111111
	The	 0.1111111111111111
	used.	 0.1111111111111111

8 :: Setting up a shared build cache using Bazel:
		 1.0

9 :: Struggling to forget:
	In	 0.043478260869565216
	this	 0.043478260869565216
	post	 0.043478260869565216
	I	 0.043478260869565216
	a	 0.08695652173913043
	and	 0.043478260869565216
	of	 0.043478260869565216
	use	 0.043478260869565216
	to	 0.043478260869565216
	show	 0.043478260869565216
	case	 0.043478260869565216
	way	 0.043478260869565216
	implement	 0.043478260869565216
	conditional	 0.043478260869565216
	fixing	 0.043478260869565216
	existentially	 0.043478260869565216
	quantified	 0.08695652173913043
	variables	 0.043478260869565216
	by	 0.043478260869565216
	universally	 0.043478260869565216
	variables.	 0.043478260869565216

10 :: Exposure without giving up artistic control:
	about	 0.058823529411764705
	article	 0.058823529411764705
	is	 0.058823529411764705
	getting	 0.058823529411764705
	perfect	 0.058823529411764705
	exposure	 0.058823529411764705
	without	 0.058823529411764705
	giving	 0.058823529411764705
	up	 0.058823529411764705
	any	 0.058823529411764705
	artistic	 0.058823529411764705
	control	 0.058823529411764705
	on	 0.058823529411764705
	modern	 0.058823529411764705
	digital	 0.058823529411764705
	This	 0.058823529411764705
	cameras.	 0.058823529411764705

11 :: Haskell vs OCaml:
	a	 0.058823529411764705
	in	 0.058823529411764705
	by	 0.058823529411764705
	is	 0.058823529411764705
	comparison	 0.058823529411764705
	between	 0.058823529411764705
	the	 0.058823529411764705
	two	 0.058823529411764705
	languages	 0.058823529411764705
	someone	 0.058823529411764705
	who	 0.058823529411764705
	has	 0.058823529411764705
	written	 0.058823529411764705
	code	 0.058823529411764705
	professionally	 0.058823529411764705
	This	 0.058823529411764705
	both.	 0.058823529411764705

12 :: Canon EOS R settings I use:
	I	 0.06666666666666667
	of	 0.06666666666666667
	to	 0.06666666666666667
	the	 0.13333333333333333
	made	 0.06666666666666667
	configuration	 0.06666666666666667
	Canon	 0.06666666666666667
	EOS	 0.06666666666666667
	R	 0.06666666666666667
	camera	 0.06666666666666667
	with	 0.06666666666666667
	explanations	 0.06666666666666667
	Tweaks	 0.06666666666666667
	why.	 0.06666666666666667

13 :: Digital photography workflow for Linux:
	I	 0.14285714285714285
	use	 0.14285714285714285
	on	 0.14285714285714285
	photgraphy	 0.14285714285714285
	workflow	 0.14285714285714285
	Digital	 0.14285714285714285
	Linux.	 0.14285714285714285

14 :: Megaparsec 8:
	of	 0.1111111111111111
	the	 0.1111111111111111
	has	 0.1111111111111111
	version	 0.1111111111111111
	parsing	 0.1111111111111111
	library	 0.1111111111111111
	been	 0.1111111111111111
	New	 0.1111111111111111
	released.	 0.1111111111111111

15 :: Ormolu: announcing first release:
		 1.0

16 :: What does a humped critter have to teach us?:
	post	 0.1
	with	 0.1
	compares	 0.1
	OCaml&#39;s	 0.1
	module	 0.1
	system	 0.1
	Haskell&#39;s	 0.1
	type	 0.1
	The	 0.1
	classes.	 0.1

17 :: Why Haskell is important:
		 1.0

18 :: Ormolu: format Haskell code like never before:
		 1.0

19 :: The monads of Haskell:
	talk	 0.16666666666666666
	about	 0.16666666666666666
	in	 0.16666666666666666
	monads	 0.16666666666666666
	Let&#39;s	 0.16666666666666666
	Haskell.	 0.16666666666666666

20 :: The types got you:
		 1.0

21 :: Existential quantification:
	In	 0.058823529411764705
	this	 0.058823529411764705
	post	 0.058823529411764705
	can	 0.058823529411764705
	in	 0.058823529411764705
	of	 0.058823529411764705
	how	 0.058823529411764705
	to	 0.058823529411764705
	be	 0.058823529411764705
	I&#39;m	 0.058823529411764705
	going	 0.058823529411764705
	give	 0.058823529411764705
	an	 0.058823529411764705
	idea	 0.058823529411764705
	existentials	 0.058823529411764705
	useful	 0.058823529411764705
	Haskell.	 0.058823529411764705

22 :: Megaparsec 7:
	post	 0.08333333333333333
	about	 0.08333333333333333
	in	 0.08333333333333333
	and	 0.08333333333333333
	the	 0.08333333333333333
	most	 0.08333333333333333
	important	 0.08333333333333333
	exiciting	 0.08333333333333333
	changes	 0.08333333333333333
	Megaparsec	 0.08333333333333333
	A	 0.08333333333333333
	7.	 0.08333333333333333

23 :: Smart constructors that cannot fail:
	post	 0.03333333333333333
	a	 0.03333333333333333
	that	 0.03333333333333333
	and	 0.03333333333333333
	of	 0.06666666666666667
	to	 0.03333333333333333
	is	 0.03333333333333333
	between	 0.03333333333333333
	the	 0.03333333333333333
	library	 0.06666666666666667
	describes	 0.03333333333333333
	design	 0.03333333333333333
	which	 0.03333333333333333
	implements	 0.03333333333333333
	refined	 0.03333333333333333
	types.	 0.03333333333333333
	Novelty	 0.03333333333333333
	it	 0.03333333333333333
	allows	 0.03333333333333333
	us	 0.03333333333333333
	establish	 0.03333333333333333
	meaningful	 0.03333333333333333
	connections	 0.03333333333333333
	properties	 0.03333333333333333
	do	 0.03333333333333333
	logical	 0.03333333333333333
	The	 0.03333333333333333
	conclusions.	 0.03333333333333333

24 :: Announcing GHC syntax highlighter:
	a	 0.058823529411764705
	that	 0.058823529411764705
	of	 0.058823529411764705
	to	 0.058823529411764705
	Haskell	 0.058823529411764705
	code	 0.058823529411764705
	allows	 0.058823529411764705
	GHC	 0.11764705882352941
	syntax	 0.058823529411764705
	highlighter,	 0.058823529411764705
	package	 0.058823529411764705
	highlight	 0.058823529411764705
	using	 0.058823529411764705
	lexer	 0.058823529411764705
	Announcing	 0.058823529411764705
	itself.	 0.058823529411764705

25 :: Stackage HEAD is now live!:
		 1.0

26 :: Bazel now supports building Haskell:
		 1.0

27 :: MMark status update:
	about	 0.14285714285714285
	the	 0.14285714285714285
	short	 0.14285714285714285
	update	 0.14285714285714285
	MMark	 0.14285714285714285
	A	 0.14285714285714285
	project.	 0.14285714285714285

28 :: Req 1.0.0, HTTP client, and streaming:
	In	 0.03333333333333333
	this	 0.03333333333333333
	post	 0.03333333333333333
	I	 0.03333333333333333
	in	 0.06666666666666667
	and	 0.03333333333333333
	of	 0.03333333333333333
	how	 0.06666666666666667
	to	 0.03333333333333333
	is	 0.03333333333333333
	the	 0.03333333333333333
	version	 0.03333333333333333
	changes	 0.03333333333333333
	it	 0.06666666666666667
	describe	 0.03333333333333333
	essential	 0.03333333333333333
	Req	 0.03333333333333333
	1.0.0,	 0.03333333333333333
	dig	 0.03333333333333333
	into	 0.03333333333333333
	low-level	 0.03333333333333333
	API	 0.03333333333333333
	http-client,	 0.03333333333333333
	does	 0.03333333333333333
	streaming,	 0.03333333333333333
	used	 0.03333333333333333
	Req.	 0.03333333333333333

29 :: Announcing MMark:
	In	 0.07142857142857142
	this	 0.07142857142857142
	post	 0.07142857142857142
	I	 0.07142857142857142
	talk	 0.07142857142857142
	about	 0.07142857142857142
	a	 0.07142857142857142
	been	 0.07142857142857142
	new	 0.07142857142857142
	markdown	 0.07142857142857142
	processor	 0.07142857142857142
	I&#39;ve	 0.07142857142857142
	working	 0.07142857142857142
	on.	 0.07142857142857142

30 :: Short ByteString and Text:
	and	 0.045454545454545456
	Haskell	 0.045454545454545456
	the	 0.13636363636363635
	does	 0.045454545454545456
	all	 0.045454545454545456
	know	 0.045454545454545456
	ByteString	 0.045454545454545456
	Text	 0.045454545454545456
	types,	 0.045454545454545456
	but	 0.045454545454545456
	are	 0.045454545454545456
	they	 0.045454545454545456
	always	 0.045454545454545456
	best	 0.045454545454545456
	choice?	 0.045454545454545456
	What	 0.045454545454545456
	else	 0.045454545454545456
	ecosystem	 0.045454545454545456
	We	 0.045454545454545456
	provide?	 0.045454545454545456

31 :: Free monad considered harmful:
	code	 0.0625
	monads	 0.0625
	using	 0.0625
	you	 0.125
	start	 0.0625
	writing	 0.0625
	your	 0.125
	free	 0.0625
	read	 0.0625
	this,	 0.0625
	may	 0.0625
	change	 0.0625
	Before	 0.0625
	mind.	 0.0625

32 :: Announcing Hasky Stack:
	my	 0.07692307692307693
	Haskell	 0.07692307692307693
	with	 0.07692307692307693
	package	 0.07692307692307693
	new	 0.07692307692307693
	working	 0.07692307692307693
	for	 0.07692307692307693
	Tool	 0.07692307692307693
	Stack	 0.07692307692307693
	—	 0.07692307692307693
	Hasky	 0.07692307692307693
	Announing	 0.07692307692307693
	Stack.	 0.07692307692307693

33 :: Evolution of error messages:
	post	 0.05263157894736842
	about	 0.05263157894736842
	and	 0.05263157894736842
	of	 0.05263157894736842
	Megaparsec	 0.05263157894736842
	second	 0.05263157894736842
	final	 0.05263157894736842
	6	 0.05263157894736842
	development.	 0.05263157894736842
	This	 0.05263157894736842
	time	 0.05263157894736842
	we	 0.05263157894736842
	walk	 0.05263157894736842
	through	 0.05263157894736842
	re-design	 0.05263157894736842
	parse	 0.05263157894736842
	error	 0.05263157894736842
	The	 0.05263157894736842
	messages.	 0.05263157894736842

34 :: A major upgrade to Megaparsec: more speed, more power:
	post	 0.045454545454545456
	that	 0.045454545454545456
	and	 0.045454545454545456
	of	 0.045454545454545456
	to	 0.045454545454545456
	the	 0.09090909090909091
	code	 0.045454545454545456
	library	 0.045454545454545456
	type	 0.045454545454545456
	Megaparsec	 0.045454545454545456
	describes	 0.045454545454545456
	extension	 0.045454545454545456
	Stream	 0.045454545454545456
	class	 0.045454545454545456
	allowed	 0.045454545454545456
	make	 0.045454545454545456
	more	 0.045454545454545456
	efficient	 0.045454545454545456
	simplify	 0.045454545454545456
	The	 0.045454545454545456
	base.	 0.045454545454545456

35 :: Path 0.6.0 released:
	to	 0.045454545454545456
	Haskell	 0.045454545454545456
	the	 0.045454545454545456
	with	 0.045454545454545456
	library	 0.045454545454545456
	most	 0.045454545454545456
	but	 0.045454545454545456
	for	 0.045454545454545456
	took	 0.045454545454545456
	some	 0.045454545454545456
	time,	 0.045454545454545456
	popular	 0.045454545454545456
	dealing	 0.045454545454545456
	well-typed	 0.045454545454545456
	paths	 0.045454545454545456
	got	 0.045454545454545456
	its	 0.045454545454545456
	next	 0.045454545454545456
	(semi)-major	 0.045454545454545456
	version,	 0.045454545454545456
	It	 0.045454545454545456
	yay!	 0.045454545454545456

36 :: Migrating text metrics to pure Haskell:
	blog	 0.09090909090909091
	post	 0.09090909090909091
	about	 0.09090909090909091
	in	 0.09090909090909091
	Haskell	 0.09090909090909091
	with	 0.09090909090909091
	more	 0.09090909090909091
	competing	 0.09090909090909091
	C	 0.09090909090909091
	One	 0.09090909090909091
	speed.	 0.09090909090909091

37 :: Working with text without pain:
	in	 0.058823529411764705
	and	 0.058823529411764705
	how	 0.058823529411764705
	to	 0.058823529411764705
	the	 0.058823529411764705
	your	 0.058823529411764705
	make	 0.058823529411764705
	more	 0.058823529411764705
	typing	 0.058823529411764705
	experience	 0.058823529411764705
	pleasant	 0.058823529411764705
	protect	 0.058823529411764705
	yourself	 0.058823529411764705
	from	 0.058823529411764705
	RSI	 0.058823529411764705
	Hints	 0.058823529411764705
	future.	 0.058823529411764705

38 :: New site:
	a	 0.07142857142857142
	and	 0.07142857142857142
	my	 0.07142857142857142
	up	 0.07142857142857142
	new	 0.07142857142857142
	I&#39;ve	 0.07142857142857142
	set	 0.07142857142857142
	site	 0.07142857142857142
	where	 0.07142857142857142
	I&#39;ll	 0.07142857142857142
	host	 0.07142857142857142
	blog,	 0.07142857142857142
	tutorials,	 0.07142857142857142
	more.	 0.07142857142857142

39 :: Putting together a form validation library:
	about	 0.1
	and	 0.1
	of	 0.1
	the	 0.1
	design	 0.1
	write-up	 0.1
	motivation	 0.1
	forma	 0.1
	A	 0.1
	library.	 0.1

40 :: Hapistrano&#39;s new features:
		 1.0

41 :: Latest additions to Megaparsec:
	blog	 0.06666666666666667
	post	 0.06666666666666667
	in	 0.06666666666666667
	of	 0.06666666666666667
	to	 0.06666666666666667
	the	 0.06666666666666667
	Megaparsec	 0.06666666666666667
	new	 0.06666666666666667
	second	 0.06666666666666667
	This	 0.06666666666666667
	summarizes	 0.06666666666666667
	features	 0.06666666666666667
	added	 0.06666666666666667
	half	 0.06666666666666667
	2016.	 0.06666666666666667

42 :: Category Theory Basics, Part I:
	in	 0.07142857142857142
	to	 0.07142857142857142
	but	 0.07142857142857142
	theory	 0.07142857142857142
	notions	 0.07142857142857142
	simple	 0.07142857142857142
	understand	 0.07142857142857142
	(I	 0.07142857142857142
	hope),	 0.07142857142857142
	concise	 0.07142857142857142
	form,	 0.07142857142857142
	part	 0.07142857142857142
	Category	 0.07142857142857142
	I.	 0.07142857142857142

43 :: Concurrent Haskell in the real world:
		 1.0

44 :: Cassava Megaparsec library released:
		 1.0

45 :: The Identicon package:
	package	 0.14285714285714285
	new	 0.14285714285714285
	for	 0.14285714285714285
	Identicon	 0.14285714285714285
	identicon	 0.14285714285714285
	My	 0.14285714285714285
	generation.	 0.14285714285714285

46 :: Announcing Megaparsec 5:
	is	 0.14285714285714285
	Megaparsec	 0.14285714285714285
	5	 0.14285714285714285
	out,	 0.14285714285714285
	what&#39;s	 0.14285714285714285
	Finally	 0.14285714285714285
	new?	 0.14285714285714285

47 :: The true power of Dvorak:
	the	 0.16666666666666666
	with	 0.16666666666666666
	experience	 0.16666666666666666
	Dvorak	 0.16666666666666666
	My	 0.16666666666666666
	layout.	 0.16666666666666666

48 :: Megaparsec 4 and 5:
	in	 0.0625
	and	 0.0625
	of	 0.0625
	is	 0.0625
	with	 0.0625
	version	 0.125
	Megaparsec	 0.0625
	What	 0.0625
	we	 0.0625
	have	 0.0625
	achieved	 0.0625
	4	 0.0625
	what	 0.0625
	planned	 0.0625
	5.	 0.0625

49 :: Lisp and Haskell:
	I	 0.08333333333333333
	is	 0.08333333333333333
	what	 0.08333333333333333
	finally	 0.08333333333333333
	decided	 0.08333333333333333
	better	 0.08333333333333333
	(for	 0.08333333333333333
	me),	 0.08333333333333333
	Lisp	 0.08333333333333333
	or	 0.08333333333333333
	Haskell?	 0.08333333333333333
	How	 0.08333333333333333

